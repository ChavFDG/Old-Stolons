@using Stolons.Helpers
@using Stolons.ViewModels.WeekBasket;
@model WeekBasketViewModel

@{
    ViewData["Title"] = "Mon panier";
}

<h2>@ViewData["Title"]</h2>

<script>
    function TrAdded(jqueryTr) {
        console.log("Row added for " + jqueryTr.attr('data-productId'));
        //Row added
        var productId = jqueryTr.attr('data-productId');
        //Hide add
        var div = $('div.addProduct[data-productId=' + productId + ']')[0];
        div.style.display = "none";
        //Show Quantity
        var div = $('div.productQuantityChanger[data-productId=' + productId + ']')[0];
        div.style.display = "inline";
    }

    $("tr.billEntry").livequery(function () {
        TrAdded($(this));
    }
        , function () {
            //Row added
            var productId = $(this).attr('data-productId');
            //Show Add
            var div = $('div.addProduct[data-productId=' + productId + ']')[0];
            div.style.display = "inline";
            //Hide Quantity
            var div = $('div.productQuantityChanger[data-productId=' + productId + ']')[0];
            div.style.display = "none";
        });

    $(document).ready(function () {
        $('button.addProductBtn').click(function () {
            var basketId = '@(Model.WeekBasket.Id.ToString())';
            $.ajax({
                url: '@Url.Action("AddToBasket", "WeekBasket")',
                data: {
                    productId: $(this).attr('data-productId'),
                    weekBasketId: '@(Model.WeekBasket.Id.ToString())'
                },
                type: 'post',
                success: function (response) {
                    $('span#data-productId' + $(this).attr('data-productId')).innerHtml = response.Quantity
                    //Add line to week basket
                    var table = document.getElementById("weekBasket");

                    // Create an empty <tr> element and add it to the 1st position of the table:
                    var row = table.insertRow(-1);
                    console.log(row);
                    $(row).attr("data-productId", response.Product.Id);
                    console.log("ok");
                    // Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
                    var cellProductName = row.insertCell(0);
                    var cellQuantity = row.insertCell(1);
                    var cellPrice = row.insertCell(2);
                    var cellDetail = row.insertCell(3);
                    var cellDelete = row.insertCell(4);

                    // Add some text to the new cells:
                    cellProductName.innerHTML = response.Product.Name;
                    cellQuantity.innerHTML = "<span data-productId='" + response.Product.Id + "'>" + response.Quantity + "</span>";
                    cellPrice.innerHTML = response.Product.Price * response.Quantity;
                    cellDetail.innerHTML = 'D';
                    cellDelete.innerHTML = "Del";
                    //Mise à jour boutons
                    TrAdded($(row));

                }
            });
        });

        $('a.plus').click(function () {
            $.ajax({
                url: '@Url.Action("PlusProduct", "WeekBasket")',
                data: {
                    productId: $(this).attr('data-productId'),
                    weekBasketId: '@(Model.WeekBasket.Id.ToString())'
                },
                type: 'post',
                success: function (response) {
                    var productId = response.Product.Id;
                    var spans = $('span[data-productId=' + productId + ']');
                    for (i = 0; i < spans.length; i++) {
                        spans[i].textContent = response.Quantity;
                    }
                }
            });
            return false;
        });

        $('a.minus').click(function () {
            $.ajax({
                url: '@Url.Action("MinusProduct", "WeekBasket")',
                data: {
                    productId: $(this).attr('data-productId'),
                    weekBasketId: '@(Model.WeekBasket.Id.ToString())'
                },
                type: 'post',
                success: function (response) {
                    if (response != null)
                    {
                        var productId = response.Product.Id;
                        var spans = $('span[data-productId=' + productId + ']');
                        for (i = 0; i < spans.length; i++) {
                            spans[i].textContent = response.Quantity;
                        }
                    }
                    else
                    {
                        //On est arrivé à 0, on supprime le produit
                        $('tr.billEntry[data-productId=' + productId + ']')[0].remove();                        
                    }
                }
            });
            return false;
        });

    });
</script>

<div class="weekbasket">
    <div class="row">
        <!-- Mon panier-->
        <div class="myBasket col-lg-3" id="basketContent">
            <table class="table" id="weekBasket">
                <tr>
                    <th>
                        Produit
                    </th>
                    <th>
                        <!-- Quantité-->
                    </th>
                    <th>
                        <!-- Prix-->
                        €
                    </th>
                    <th>
                        <!-- Detail-->
                    </th>
                    <th>
                        <!-- Suppression-->
                    </th>
                </tr>

                @foreach (BillEntry entry in Model.WeekBasket.Products)
                {
                    <tr class="billEntry" data-productId="@entry.Product.Id">
                        <th>
                            @entry.Product.Name
                        </th>
                        <th>
                            <span class="quantity" data-productId="@entry.Product.Id">@entry.Quantity</span>
                        </th>
                        <th>
                            @(entry.Quantity * entry.Product.Price)
                        </th>
                        <th>
                            D
                        </th>
                        <th>
                            Del
                        </th>
                    </tr>
                }
            </table>
        </div>

        <!-- Les produits-->
        <div class="products col-lg-9">
            <!-- Les filtres-->
            <div class="filters">
                <label class="control-label" for="productFamilly">Famille : </label>
                <select id="Familly" name="productFamilly">
                    <optgroup label="Tous">
                        <option value="Tous">Tous</option>
                    </optgroup>
                    @foreach (var productType in Model.ProductTypes)
                    {
                        <optgroup label="@productType.Name">
                            @foreach (var productFamily in productType.ProductFamilly)
                            {
                                <option value="@productFamily.FamillyName">@productFamily.FamillyName</option>
                            }
                        </optgroup>
                    }
                </select>
                <label>Recherche :</label>
                <input id="Search" type="text">
                <script>
                </script>
                <script>
                $('#Familly').change(function ()
                {
                    filterproducts();
                });
                $("#Search").keyup(function () {
                    filterproducts();
                });

                function filterproducts() {
                    var $searchVal = $.trim($("#Search").val())
                    var elements = document.getElementsByClassName('product')
                    for (var i = 0; i < elements.length; i++)  {
                        if ((elements[i].dataset.familly == $('#Familly').val().toString() //Si la famille selectionné
                            || $('#Familly').val().toString() == "Tous") // ou si on affiche tous
                            && (elements[i].dataset.productname.toLowerCase().contains($searchVal.toLowerCase()) // Si c'est le contenue de la boite de recherche
                            || $searchVal === "")) { // Ou si la boite de recherche est vide
                            elements[i].style.display = "inline-block"
                        }
                        else {
                            elements[i].style.display = "none"
                        }
                    }
                }

                </script>
            </div>
            @foreach (Product product in Model.Products)
            {
                <div class="product" data-familly="@product.Familly.FamillyName" data-productname="@product.Name" data-productId="@product.Id">
                    <div class="product-top">
                        <div class="pr_img product-top">
                            <img src="@Configurations.GetUrl(product.GetFirstImage())" />
                        </div>
                        <div class="pr_avatar">
                            <img class="avatar" src="@Configurations.GetUrl(product.Producer.Avatar)" />
                        </div>
                        <div class="pr_labels">
                            @foreach (Product.Label label in product.Labels)
                            {
                                <div class="pr_label">
                                    <img src="@Configurations.GetUrl(label.GetImage())" />
                                </div>
                            }
                        </div>
                    </div>
                    <div class="product-bottom">
                        <div class="pr_text">
                            <div class="pr_name">
                                @product.Name
                            </div>
                            <div class="pr_priceQuantity">
                                @(product.Price +"€")
                                @if (product.Type == Product.SellType.Piece)
                                {
                                    @(" la pièce")
                                }
                                else
                                {
                                    @(" / " + product.ProductUnit.ToString())
                                }
                            </div>
                        </div>
                        <div class="pr_actions">
                            <div class="addProduct" data-productId="@product.Id">
                                <button type="button" class="btn btn-default addProductBtn" data-productId="@product.Id">Ajouter au panier</button>
                            </div>
                            <div class="productQuantityChanger" data-productId="@product.Id">
                                <a href="" class="minus" data-productId="@product.Id"  >
                                    <img src="@Configurations.GetUrl("/images/basket-remove.png")" />
                                </a>
                                <span class="quantity" data-productId="@product.Id">@(Model.WeekBasket.Products.Any(x => x.Product.Id == product.Id) ? Model.WeekBasket.Products.First(x=>x.Product.Id == product.Id).Quantity : 1) </span>
                                <a href="" class="plus" data-productId="@product.Id" >
                                    <img src="@Configurations.GetUrl("/images/basket-add.png")" />
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>