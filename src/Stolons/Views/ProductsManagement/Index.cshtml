@model IEnumerable<Stolons.Models.Product>
@using Stolons.Helpers
@using Stolons.Models

@{
    ViewData["Title"] = "Gestion de mes produits et de mes stocks";
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="Manage">Ajouter un produit</a> 
    @if (Configurations.Mode == ApplicationConfig.Modes.DeliveryAndStockUpdate)
    {        
        if (Model.Any(x => x.State == Product.ProductState.Stock))
        {
            <p>
                <a asp-action="EnableAllStockProduct">Rendre disponible tout les produits en attente de stock</a>
            </p>
        }
    }
<table class="table">
  <tr>
	<th>
	    Image
	</th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UnitPrice)
        </th>
        <th>
            Pallier de poids
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        @if(Configurations.Mode == ApplicationConfig.Modes.Order)
        {
            <th>
                @Html.DisplayNameFor(model => model.RemainingStock)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.WeekStock)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @if (Configurations.Mode == ApplicationConfig.Modes.DeliveryAndStockUpdate)
            {
                <a asp-action="DisableAllProduct">Désactiver tout les produits</a>
            }
        </th>
    </tr>
    
@foreach (var item in Model) {
  <tr>
    <td>
      <div class="productMgtImage">
	@{
	if (item.Pictures.Count > 0) {
	<img src="@item.Pictures[0]" />
	} else {
	<img alt="pas d'image" />
	}
	}
      </div>
    </td>
        <th>
          @Html.DisplayFor(modelItem => item.Name)
        </th>
        <th>
            @Html.DisplayFor(model => item.UnitPrice) @("€")
        </th>
        <th>
            @if (item.QuantityStep != 0)
            {
                @Html.DisplayFor(model => item.QuantityStepString)
            }
        </th>
        <th>
            @if (item.QuantityStep != 0)
            {
                @Html.DisplayFor(model => item.Price)@("€/")
                @Html.DisplayFor(model => item.ProductUnit)
            }
        </th>
        <th>
            @(EnumHelper<Product.SellType>.GetDisplayValue(@item.Type))
        </th>
        @if (Configurations.Mode == ApplicationConfig.Modes.Order)
        {
            <th>
                <input id="@("RemainingStockEdition" + item.Id)" asp-for="@item.RemainingStock" class="form-control" min="0" />
                <script>
            $('#@("RemainingStockEdition" + item.Id)').change(function ()
            {
            $.ajax({
            url: '@Url.Action("ChangeCurrentStock", "ProductsManagement")',
            type: 'POST',
            data: {
            id: '@item.Id',
            newStock: $('#@("RemainingStockEdition" + item.Id)').val()
            }
            });
            });
                </script>
            </th>
        }
        <th>
            @if (Configurations.Mode == ApplicationConfig.Modes.DeliveryAndStockUpdate)
            {
                <input id="@("WeekStockEdition" + item.Id)" asp-for="@item.WeekStock" class="form-control" min="0" />
                <script>
            $('#@("WeekStockEdition" + item.Id)').change(function ()
            {
                $.ajax({
                    url: '@Url.Action("ChangeStock", "ProductsManagement")',
                    type: 'POST',
                    data: {
                        id: '@item.Id',
                        newStock: $('#@("WeekStockEdition" + item.Id)').val()
                    }
                });
            });
                </script>
            }
            else
            {
                @Html.DisplayFor(model => item.WeekStock)
            }
        </th>
        @switch (@item.State)
        {
            case Product.ProductState.Disabled:
                <th bgcolor="#ff0000">
                    @(EnumHelper<Product.ProductState>.GetDisplayValue(@item.State))
                </th>
                break;
            case Product.ProductState.Enabled:
                <th bgcolor="#00ff00">
                    @(EnumHelper<Product.ProductState>.GetDisplayValue(@item.State))
                </th>
                break;
            case Product.ProductState.Stock:
                <th bgcolor="#ff8000">
                    @(EnumHelper<Product.ProductState>.GetDisplayValue(@item.State))
                </th>
                break;
        }
        <td>
            @if (Configurations.Mode == ApplicationConfig.Modes.DeliveryAndStockUpdate)
            {
                if (@item.State == Product.ProductState.Enabled)
                {
                    <a asp-action="Disable" asp-route-id="@item.Id">Rendre indisponible </a>
                }
            }
            @if (@item.State != Product.ProductState.Enabled)
            {
                <a asp-action="Enable" asp-route-id="@item.Id">Rendre disponible </a>

            }
            @if (@item.State != Product.ProductState.Enabled || Configurations.Mode == ApplicationConfig.Modes.DeliveryAndStockUpdate)
            {
                <a asp-action="Manage" asp-route-id="@item.Id"> Editer</a>
                
                <a asp-action="Delete" asp-route-id="@item.Id"> Supprimer</a>
            }
        </td>
    </tr>
}
</table>
