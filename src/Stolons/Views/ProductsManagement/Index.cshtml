@model IEnumerable<Stolons.Models.Product>
@using Stolons.Helpers
@using Stolons.Models

@{
    ViewData["Title"] = "Gestion de mes produits et mes stocks";
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="Create">Ajouter un produit</a>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Familly.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Familly)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Labels)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WeekStock)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th></th>
    </tr>
    
@foreach (var item in Model) {
    <tr>
        <th>
            @Html.DisplayFor(modelItem => item.Name)
        </th>
        <th>
            @Html.DisplayFor(model => item.Familly.Type.Name)
        </th>
        <th>
            @Html.DisplayFor(model => item.Familly.Type.ProductFamilly)
        </th>
        <th>
            @(EnumHelper<Product.SellType>.GetDisplayValue(@item.Type))
        </th>
        <th>
            @for (int cpt = 0; cpt < item.Labels.Count; cpt++)
            {
                @(EnumHelper<Product.Label>.GetDisplayValue(item.Labels[cpt]) )
                if (cpt != item.Labels.Count - 1)
                {
                    @(", ")
                }
            }
        </th>
        <th>
            @Html.DisplayFor(model => item.Price)
        </th>
        <th>
            @Html.DisplayFor(model => item.WeekStock)
        </th>
        @switch (@item.State)
        {
            case Product.ProductState.Disabled:
                <th>
                    @(EnumHelper<Product.ProductState>.GetDisplayValue(@item.State))
                </th>
                break;
            case Product.ProductState.Enabled:
                <th  bgcolor="#00ff00">
                    @(EnumHelper<Product.ProductState>.GetDisplayValue(@item.State))
                </th>
                break;
            case Product.ProductState.Stock:
                <th  bgcolor="#FF0000">
                    @(EnumHelper<Product.ProductState>.GetDisplayValue(@item.State))
                </th>
                break;

        }
        <td>
            <a asp-action="Edit" asp-route-id="@item.Id">Editer</a> |
            <a asp-action="Details" asp-route-id="@item.Id">Détails</a> |
            <a asp-action="Delete" asp-route-id="@item.Id">Supprimer</a>
        </td>
    </tr>
}
</table>
